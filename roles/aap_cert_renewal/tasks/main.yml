---
- name: Ensure our secret file is in place for non-containerized aap
  become: true
  become_user: root
  tags:
    - legacy
  ansible.builtin.copy:
    src: files/{{ aap_cert_renewal_secret_file_name }}
    dest: /root/.ssh/secret
    owner: root
    group: root
    mode: '0600'
    decrypt: true

- name: Ensure our secret file is in place for containerized aap
  tags:
    - container
  ansible.builtin.copy:
    src: files/{{ aap_cert_renewal_secret_file_name }}
    dest: /home/ansible-svc/.ssh/secret
    owner: ansible-svc
    group: ansible-svc
    mode: '0600'
    decrypt: true

- name: Ensure we have the AAP bundle directory
  tags:
    - container
  register: aap_bundle_dir
  changed_when: false
  ansible.builtin.shell: ls -d /home/ansible-svc/ansible-automation-platform-containerized-*

- name: Ensure we have the non-containerized AAP bundle directory
  tags:
    - legacy
  become: true
  become_user: root
  register: non_containerized_aap_bundle_dir
  changed_when: false
  ansible.builtin.shell: ls -d /root/ansible-automation-platform-setup-bundle-*

- name: Ensure the containerized inventory file is configured to renew the ssl cert
  tags:
    - container
  ansible.builtin.template:
    src: templates/containerized_aap_24_inventory_controller_file_cert_renewal.j2
    dest: "{{ aap_bundle_dir.stdout }}/inventory"
    owner: ansible-svc
    group: ansible-svc
    mode: "0644"
    backup: true

- name: Ensure the legacy inventory file is configured to renew the ssl cert
  tags:
    - legacy
  become: true
  become_user: root
  ansible.builtin.template:
    src: templates/legacy_aap_24_inventory_controller_file.j2
    dest: "{{ non_containerized_aap_bundle_dir.stdout }}/inventory"
    owner: root
    group: root
    mode: "0644"
    backup: true

- name: Copy vault into place
  tags:
    - container
  ansible.builtin.copy:
    src: files/{{ aap_cert_renewal_vault_file_name }}
    dest: "{{ aap_bundle_dir.stdout }}/{{ aap_cert_renewal_vault_file_name }}"
    owner: ansible-svc
    group: ansible-svc
    mode: '0644'
    decrypt: false

- name: Copy vault into place
  tags:
    - legacy
  become: true
  become_user: root
  ansible.builtin.copy:
    src: files/{{ aap_cert_renewal_vault_file_name }}
    dest: "{{ non_containerized_aap_bundle_dir.stdout }}/{{ aap_cert_renewal_vault_file_name }}"
    owner: root
    group: root
    mode: '0644'
    decrypt: false

- name: Ensure certificate match
  tags:
    - always
  become: true
  become_user: root
  register: certificate_diff
  changed_when: false
  ignore_errors: true
  ansible.builtin.command:
    cmd: /usr/bin/diff /etc/letsencrypt/live/{{ aap_cert_renewal_controller_url }}/fullchain.pem
         /home/ansible-svc/.sslcerts/{{ aap_cert_renewal_controller_url }}/fullchain.pem

- name: Print
  ansible.builtin.debug:
    var: certificate_diff

# - name: Renew ssl cert for containerized aap
#   tags:
#     - container
#   become: true
#   become_user: root
#   register: output
#   when: ansible_date_time.epoch|float - mtimes.stat.mtime > 60*60*24*60
#   changed_when: ansible_date_time.epoch|float - mtimes.stat.mtime > 60*60*24*60
#   notify:
#     - Copy containerized privkey
#     - Copy containerized fullchain
#     - Install new ssl certificate into containerized aap
#   ansible.builtin.command:
#     cmd: /usr/bin/certbot renew --cert-name {{ aap_cert_renewal_controller_url }}
